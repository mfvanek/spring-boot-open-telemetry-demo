plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.bmuschko.docker-java-application' version '9.3.1'
    id 'java'
    id 'io.freefair.lombok' version '8.0.1'
}

group = 'io.github.mfvanek'
version = '0.0.7'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenLocal()
    mavenCentral()
}

def micrometerVersion = '1.0.4'
dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.10.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    implementation "io.micrometer:micrometer-tracing:${micrometerVersion}"
    implementation "io.micrometer:micrometer-tracing-bridge-otel:${micrometerVersion}"

//    implementation('org.springframework.cloud:spring-cloud-starter-sleuth') {
//        exclude group: 'org.springframework.cloud', module: 'spring-cloud-sleuth-brave'
//    }
//    implementation 'org.springframework.cloud:spring-cloud-sleuth-otel-autoconfigure'
//    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.26.0'

    testImplementation(enforcedPlatform("org.junit:junit-bom:5.9.3"))
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation "io.micrometer:micrometer-tracing-test:${micrometerVersion}"
}

test {
    useJUnitPlatform()
}

docker {
    javaApplication {
        baseImage = 'bellsoft/liberica-openjdk-alpine:17.0.5'
        maintainer = 'Ivan Vakhrushev'
        images = ["${project.name}:${project.version}", "${project.name}:latest"]
    }
}

springBoot {
    buildInfo()
}
